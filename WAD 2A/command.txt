Summary of what you achieved:
    Created a local Git repo.
    Connected it to a GitHub repo.
    Committed all your code.
    Pushed it to GitHub â€” now itâ€™s live and version-controlled!



âœ… 1. Check Git version:
git --version
ðŸ‘‰ This checks if Git is installed and tells you the installed version.


âœ… 2. Navigate to project folder:
cd C:\Users\sspag\Desktop\sudoku-app
ðŸ‘‰ This changes directory (cd) to your project folder called sudoku-app on your Desktop.


âœ… 3. Initialize Git repository:
git init
ðŸ‘‰ This sets up Git inside the folder, creating a hidden .git folder to track changes.


âœ… 4. Add remote repository (GitHub link):
git remote add origin https://github.com/Aryan-Lokhande/Sudoku_Puzzle.git
ðŸ‘‰ This connects your local project to the GitHub repository named Sudoku_Puzzle.


âœ… 5. Add files to Git staging area:
git add .
ðŸ‘‰ This stages all files (. means everything) so theyâ€™re ready to be committed.


âœ… 6. Commit files:
git commit -m "Initial commit"
ðŸ‘‰ This saves your staged files into Git history with the message "Initial commit".


âœ… 7. Rename default branch to main:
git branch -M main
ðŸ‘‰ This renames the local branch from the old default master to main (GitHub uses main as the default now).


âœ… 8. Push to GitHub:
git push -u origin main
ðŸ‘‰ This uploads (pushes) your commits to GitHub under the main branch.
The -u option also sets origin/main as the upstream, so in the future, you can just run git push without specifying the branch.